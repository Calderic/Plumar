---
import { getPlumarConfig } from '../utils/config.js';
import FallbackLayout from '../layouts/fallback.astro';

// 静态导入所有可能的主题布局
let HomeLayout, DefaultLayout, PostLayout;
let layoutSource = 'fallback';

try {
  // 尝试导入主题布局
  HomeLayout = (await import('@theme/layouts/home.astro')).default;
} catch {
  // 主题没有 home 布局
}

try {
  DefaultLayout = (await import('@theme/layouts/default.astro')).default;
} catch {
  // 主题没有 default 布局
}

try {
  PostLayout = (await import('@theme/layouts/PostLayout.astro')).default;
} catch {
  // 主题没有 PostLayout 布局
}

const { pageType = 'default', ...pageData } = Astro.props;

// 获取配置
const config = getPlumarConfig();

// 选择合适的布局
let ThemeLayout = FallbackLayout;

if (pageType === 'home' && HomeLayout) {
  ThemeLayout = HomeLayout;
  layoutSource = 'theme:home';
} else if (pageType === 'post' && PostLayout) {
  ThemeLayout = PostLayout;
  layoutSource = 'theme:post';
} else if (DefaultLayout) {
  ThemeLayout = DefaultLayout;
  layoutSource = 'theme:default';
} else {
  ThemeLayout = FallbackLayout;
  layoutSource = 'fallback';
}

// 准备传递给布局的数据
const layoutProps = {
  ...pageData,
  pageType,
  language: config.language || 'zh-CN'
};

// 开发模式下显示调试信息
const isDev = import.meta.env.DEV;
if (isDev) {
  console.log(`🎨 [ThemePageRenderer] 页面类型: ${pageType}, 布局来源: ${layoutSource}`);
  console.log(`🎨 [ThemePageRenderer] 主题: ${config.theme || 'none'}`);
  console.log(`🎨 [ThemePageRenderer] 可用布局: Home=${!!HomeLayout}, Default=${!!DefaultLayout}, Post=${!!PostLayout}`);
}
---

<!-- 开发模式下的调试注释 -->
{isDev && (
  <!-- 
  Plumar Theme Debug Info:
  - Page Type: {pageType}
  - Layout Source: {layoutSource}
  - Theme: {config.theme || 'none'}
  - Available Layouts: Home={!!HomeLayout}, Default={!!DefaultLayout}, Post={!!PostLayout}
  -->
)}

<ThemeLayout {...layoutProps}>
  <slot />
</ThemeLayout> 