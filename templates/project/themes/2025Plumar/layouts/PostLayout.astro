---
import BaseLayout from './BaseLayout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';

interface Props {
  frontmatter?: {
    title: string;
    date: Date;
    tags?: string[];
    categories?: string[];
    description?: string;
    image?: string;
    draft?: boolean;
  };
  post?: {
    title: string;
    date: Date;
    tags?: string[];
    categories?: string[];
    description?: string;
    image?: string;
    draft?: boolean;
  };
  title?: string;
  description?: string;
  [key: string]: any;
}

const { frontmatter, post, ...otherProps } = Astro.props;

// 兼容多种数据传递方式
const articleData = frontmatter || post || {
  title: otherProps.title || '无标题',
  date: otherProps.date || new Date(),
  tags: otherProps.tags || [],
  categories: otherProps.categories || [],
  description: otherProps.description || '',
  image: otherProps.image,
  draft: otherProps.draft || false
};

// 计算阅读时间 (简单估算)
function calculateReadingTime(content: string): number {
  const wordsPerMinute = 200;
  const words = content.length / 3; // 中文字符数估算
  return Math.ceil(words / wordsPerMinute);
}

// 获取文章内容进行阅读时间计算
const content = await Astro.slots.render('default');
const readingTime = calculateReadingTime(content);
---

<BaseLayout 
  title={articleData.title} 
  description={articleData.description}
  image={articleData.image}
  type="article"
>
  <Header slot="header" />
  
  <article class="post">
    <!-- 文章头部 -->
    <header class="post-header">
      <div class="post-breadcrumb">
        <a href="/">首页</a>
        <span class="breadcrumb-separator">›</span>
        <a href="/blog">博客</a>
        <span class="breadcrumb-separator">›</span>
        <span class="breadcrumb-current">{articleData.title}</span>
      </div>
      
      <h1 class="post-title">{articleData.title}</h1>
      
      <div class="post-meta">
        <div class="post-date">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
            <rect x="3" y="4" width="18" height="18" rx="2" ry="2" stroke="currentColor" stroke-width="2"/>
            <line x1="16" y1="2" x2="16" y2="6" stroke="currentColor" stroke-width="2"/>
            <line x1="8" y1="2" x2="8" y2="6" stroke="currentColor" stroke-width="2"/>
            <line x1="3" y1="10" x2="21" y2="10" stroke="currentColor" stroke-width="2"/>
          </svg>
          <time datetime={articleData.date.toISOString()}>
            {articleData.date.toLocaleDateString('zh-CN', {
              year: 'numeric',
              month: 'long',
              day: 'numeric'
            })}
          </time>
        </div>
        
        <div class="post-reading-time">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
            <circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="2"/>
            <polyline points="12,6 12,12 16,14" stroke="currentColor" stroke-width="2"/>
          </svg>
          <span>约 {readingTime} 分钟阅读</span>
        </div>
        
        {articleData.categories && articleData.categories.length > 0 && (
          <div class="post-categories">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
              <path d="M20.59 13.41l-7.17 7.17a2 2 0 0 1-2.83 0L2 12V2h10l8.59 8.59a2 2 0 0 1 0 2.82z" stroke="currentColor" stroke-width="2"/>
              <line x1="7" y1="7" x2="7.01" y2="7" stroke="currentColor" stroke-width="2"/>
            </svg>
            <span>分类：</span>
            {articleData.categories.map((category, index) => (
              <Fragment>
                <a href={`/categories/${category}`} class="post-category">{category}</a>
                {index < articleData.categories.length - 1 && <span>, </span>}
              </Fragment>
            ))}
          </div>
        )}
      </div>
      
      {articleData.tags && articleData.tags.length > 0 && (
        <div class="post-tags">
          {articleData.tags.map((tag) => (
            <a href={`/tags/${tag}`} class="post-tag">#{tag}</a>
          ))}
        </div>
      )}
    </header>
    
    <!-- 文章内容 -->
    <div class="post-content">
      <slot />
    </div>
    
    <!-- 文章底部导航 -->
    <footer class="post-footer">
      <div class="post-nav">
        <div class="post-nav-prev">
          <!-- 这里可以添加上一篇文章的链接 -->
        </div>
        <div class="post-nav-next">
          <!-- 这里可以添加下一篇文章的链接 -->
        </div>
      </div>
      
      <!-- 分享按钮 -->
      <div class="post-share">
        <span class="share-label">分享到：</span>
        <button class="share-btn" onclick="shareToTwitter()" aria-label="分享到Twitter">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none">
            <path d="M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z" stroke="currentColor" stroke-width="2" fill="none"/>
          </svg>
        </button>
        <button class="share-btn" onclick="copyLink()" aria-label="复制链接">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none">
            <path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" stroke="currentColor" stroke-width="2"/>
            <path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" stroke="currentColor" stroke-width="2"/>
          </svg>
        </button>
      </div>
    </footer>
  </article>
  
  <Footer slot="footer" />
</BaseLayout>

<style>
  /* 文章面包屑 */
  .post-breadcrumb {
    font-size: 0.875rem;
    color: var(--color-text-muted);
    margin-bottom: 1.5rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }
  
  .post-breadcrumb a {
    color: var(--color-text-muted);
    text-decoration: none;
    transition: color var(--animation-duration) var(--animation-easing);
  }
  
  .post-breadcrumb a:hover {
    color: var(--color-primary);
  }
  
  .breadcrumb-separator {
    color: var(--color-text-muted);
    opacity: 0.6;
  }
  
  .breadcrumb-current {
    color: var(--color-text-secondary);
    font-weight: 500;
  }
  
  /* 文章标签 */
  .post-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-top: 1rem;
  }
  
  /* 文章分类 */
  .post-categories {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }
  
  .post-category {
    color: var(--color-primary);
    text-decoration: none;
    font-weight: 500;
    transition: color var(--animation-duration) var(--animation-easing);
  }
  
  .post-category:hover {
    color: var(--color-primary-dark);
    text-decoration: underline;
  }
  
  /* 文章底部 */
  .post-footer {
    margin-top: 4rem;
    padding-top: 2rem;
    border-top: 1px solid var(--color-border);
  }
  
  .post-nav {
    display: flex;
    justify-content: space-between;
    margin-bottom: 2rem;
  }
  
  .post-nav-prev,
  .post-nav-next {
    flex: 1;
  }
  
  .post-nav-next {
    text-align: right;
  }
  
  /* 分享按钮 */
  .post-share {
    display: flex;
    align-items: center;
    gap: 1rem;
    justify-content: center;
    padding: 1.5rem;
    background-color: var(--color-surface);
    border-radius: var(--radius-lg);
    border: 1px solid var(--color-border);
  }
  
  .share-label {
    font-size: 0.875rem;
    color: var(--color-text-secondary);
    font-weight: 500;
  }
  
  .share-btn {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 2.5rem;
    height: 2.5rem;
    background-color: var(--color-surface-alt);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-md);
    color: var(--color-text-secondary);
    cursor: pointer;
    transition: all var(--animation-duration) var(--animation-easing);
  }
  
  .share-btn:hover {
    color: var(--color-primary);
    background-color: rgba(37, 99, 235, 0.1);
    border-color: var(--color-primary);
    transform: translateY(-1px);
  }
  
  /* 移动端调整 */
  @media (max-width: 768px) {
    .post-breadcrumb {
      font-size: 0.8125rem;
      margin-bottom: 1rem;
    }
    
    .post-meta {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.75rem;
    }
    
    .post-share {
      flex-direction: column;
      gap: 1rem;
      padding: 1.25rem;
    }
    
    .post-nav {
      flex-direction: column;
      gap: 1rem;
    }
    
    .post-nav-next {
      text-align: left;
    }
  }
</style>

<script>
  // 分享功能
  function shareToTwitter() {
    const title = document.title;
    const url = window.location.href;
    const text = `${title} ${url}`;
    const twitterUrl = `https://twitter.com/intent/tweet?text=${encodeURIComponent(text)}`;
    window.open(twitterUrl, '_blank', 'width=600,height=400');
  }
  
  function copyLink() {
    navigator.clipboard.writeText(window.location.href).then(() => {
      // 简单的提示反馈
      const btn = event.target.closest('.share-btn');
      const originalContent = btn.innerHTML;
      btn.innerHTML = `
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none">
          <polyline points="20,6 9,17 4,12" stroke="currentColor" stroke-width="2"/>
        </svg>
      `;
      btn.style.color = 'var(--color-success)';
      
      setTimeout(() => {
        btn.innerHTML = originalContent;
        btn.style.color = '';
      }, 2000);
    }).catch(() => {
      // 降级处理
      const textArea = document.createElement('textarea');
      textArea.value = window.location.href;
      document.body.appendChild(textArea);
      textArea.select();
      document.execCommand('copy');
      document.body.removeChild(textArea);
    });
  }
</script> 